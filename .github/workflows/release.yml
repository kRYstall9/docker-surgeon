name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to (re)publish on Docker Hub (i.e. 1.2.3)"
        required: false
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Semantic Release
        run: |
          npm install -g semantic-release \
            @semantic-release/changelog \
            @semantic-release/exec \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator \
            @semantic-release/git

      - name: Configure Git user for bot
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run Semantic Release
        if: ${{ github.event.inputs.version == '' }}
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

      - name: Set manual version
        if: ${{ github.event.inputs.version != '' }}
        run: |
          echo "RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "⚙️ Forcing rebuild for version: ${{ github.event.inputs.version }}"

      - name: Read release version
        if: ${{ github.event.inputs.version == '' }}
        run: |
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)
            echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
            echo "Detected release version: $VERSION"
          else
            echo "No new release detected"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push multi-arch image
        if: env.RELEASE_VERSION != ''
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/docker-surgeon
          VERSION=${RELEASE_VERSION}
          echo "🚀 Building image: $IMAGE_NAME:$VERSION"

          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t $IMAGE_NAME:$VERSION \
            -t $IMAGE_NAME:latest \
            --push .
